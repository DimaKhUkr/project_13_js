{"mappings":"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","sources":["src/js/weather.js","src/js/sendrequest.js","src/js/mobileMenu.js","src/js/categories.js","src/index.js"],"sourcesContent":["// \"use strict\";\n\nconst form = document.getElementById(`search-form`);\nconst weather = document.getElementById(`weather`);\nconst APP_ID = 'f5984abfd7be02d0f0f71396692dd7ba';\nconst defaultCity = 'Kyiv';\n\nasync function loadWeather(lat, lon) {\n  // Вставляем гифку пока ожидаем ответ от АПИ\n  weather.innerHTML = `\n    <div class=\"weather__loading\">\n      <img src=\"./\" alt=\"Loading...\">\n    </div>\n  `;\n  let serverApi;\n  if (lat && lon) {\n    serverApi = `https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${lat}&lon=${lon}&appid=${APP_ID}`;\n  } else {\n    serverApi = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${defaultCity}&appid=${APP_ID}`;\n  }\n  const response = await fetch(serverApi, {\n    method: `GET`,\n  });\n  const responseResult = await response.json();\n  if (response.ok) {\n    getWeather(responseResult);\n  } else {\n    weather.innerHTML = responseResult.message;\n  }\n}\n\nfunction getWeather(data) {\n  //  Обрабатывем и выводим данные\n  console.log(data);\n  const location = data.name;\n  const temp = Math.round(data.main.temp);\n  const weatherStatus = data.weather[0].main;\n  const weatherIcon = data.weather[0].icon;\n  const currentDayOfWeek = new Date().toLocaleDateString('en-US', {\n    weekday: 'short',\n  });\n  const currentDay = new Date()\n    .toLocaleDateString('en-US', { day: 'numeric' })\n    .toUpperCase();\n  const currentMonth = new Date().toLocaleDateString('en-US', {\n    month: 'short',\n  });\n  const currentYear = new Date()\n    .toLocaleDateString('en-US', { year: 'numeric' })\n    .toUpperCase();\n\n  // Разметка HTML\n  let template = `<div class=\"header__weather\">\n    <div class=\"temp__info\">${temp}°</div>\n    <div class=\"status__location\">\n      <div class=\"status\">\n        <p class=\"status__name\">${weatherStatus}</p>\n      </div>\n      <div class=\"location\">\n        <img src=\"./svg/vector.svg\" alt=\"checkpoint\">\n        <p class=\"location__name\">${location}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"icon__picture\">\n    <img class=\"weather__picture\" src=\"https://openweathermap.org/img/w/${weatherIcon}.png\" alt=\"Clouds\">\n  </div>\n  <div class=\"date__wrapper\">\n    <div class=\"day\">${currentDayOfWeek}</div>\n    <div class=\"date\">${currentDay} ${currentMonth} ${currentYear}</div>\n  </div>\n  <button class=\"weatherForweek\" id=\"weatherForweek\">Weather for 5 days</button>\n  `;\n  weather.innerHTML = template;\n  //   const weatherForweek = document.getElementById(`weatherForweek`);\n  //   weatherForweek.addEventListener(`click`, getWeatherForWeek);\n}\n\n// Получение геолокации пользователя\nexport function getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        loadWeather(lat, lon);\n      },\n      () => {\n        loadWeather();\n      }\n    );\n  } else {\n    loadWeather();\n  }\n}\n\n// Проверочка\nif (weather) {\n  getLocation();\n}\n\n// КОД НЕ ТРОГАЙТЕ, завтра буду поправлять\n\n// ПОГОДА НА 5 дней\n\n// function getWeatherForWeek() {\n//   let lat, lon;\n//   // получаем текущую геолокацию пользователя\n//   navigator.geolocation.getCurrentPosition(\n//   (position) => {\n//   lat = position.coords.latitude;\n//   lon = position.coords.longitude;\n//   getWeatherData(APP_ID, lat, lon);\n//   },\n//   // Если геолокация недоступна, используем координаты Киева\n//   () => {\n//   lat = 50.4501;\n//   lon = 30.5234;\n//   getWeatherData(APP_ID, lat, lon);\n//   }\n//   );\n\n//   function getWeatherData(APP_ID, lat, lon) {\n//   const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${APP_ID}&units=metric`;\n//   fetch(url)\n//   .then((response) => response.json())\n//   .then((data) => {\n//   const weatherData = [];\n//    // Парсим данные о погоде на 7 дней\n//    let currentDate = new Date(data.list[0].dt_txt).getDate(); // Проверяем дату\n//    let dayOfWeek = new Date(data.list[0].dt_txt).toLocaleDateString(\"en-US\", { weekday: \"short\" }); // Получаем день недели\n//    let tempMin = data.list[0].main.temp;\n//    let tempMax = data.list[0].main.temp;\n//    let iconCode = data.list[0].weather[0].icon;\n//    let iconUrl = `https://openweathermap.org/img/wn/${iconCode}.png`;\n//    for (let i = 1; i < data.list.length; i++) {\n//      const dt = new Date(data.list[i].dt_txt);\n//      const date = dt.getDate();\n//      if (date !== currentDate) { // Считаем данные за текущий день и добавляем в массив\n//        const month = dt.toLocaleDateString(\"en-US\", { month: \"short\" });\n//        weatherData.push({\n//          dayOfWeek,\n//          dayOfMonth: currentDate,\n//          month,\n//          tempMin,\n//          tempMax,\n//          iconUrl,\n//        });\n//        // Обновляем данные для следующего дня\n//        currentDate = date;\n//        dayOfWeek = dt.toLocaleDateString(\"en-US\", { weekday: \"short\" });\n//        tempMin = data.list[i].main.temp;\n//        tempMax = data.list[i].main.temp;\n//        iconCode = data.list[i].weather[0].icon;\n//        iconUrl = `https://openweathermap.org/img/wn/${iconCode}.png`;\n//      } else {\n//       // Обновляем данные для текущего дня\n//        if (data.list[i].main.temp < tempMin) {\n//          tempMin = data.list[i].main.temp;\n//        }\n//        if (data.list[i].main.temp > tempMax) {\n//          tempMax = data.list[i].main.temp;\n//        }\n//      }\n//    }\n\n//    // Выводим данные в нужном формате\n//     weather.innerHTML = '';\n//   //  Кнопка BACK\n//     const backBtn = document.createElement(\"button\");\n//     weather.appendChild(backBtn).classList.add(\"backBtn\");\n//     backBtn.innerHTML = `Back`\n//     backBtn.addEventListener(`click`, () => {\n//       loadWeather(lat, lon);\n//     });\n\n//     weatherData.forEach((day) => {\n//       const { dayOfWeek, dayOfMonth, month, tempMin, tempMax, iconUrl } = day;\n\n//       const weatherInfo = `\n//         <div class=\"day__card\">\n//           <div class=\"dayOfMonth\">${dayOfMonth}</div>\n//           <div class=\"dayOfWeek\">${dayOfWeek}</div>\n//         </div>\n//         <div class=\"iconUrl\">\n//             <img class=\"weather__picture__5days\" src=\"${iconUrl}\" alt=\"weather4days\">\n//           </div>\n//         <div class=\"icon__status\">\n//           <div class=\"tempMax\">Max temp:${Math.round(tempMax)}°</div>\n//           <div class=\"tempMin\">Min temp:${Math.round(tempMin)}°</div>\n//         </div>\n//       `;\n//       const dayDiv = document.createElement(\"div\");\n//       dayDiv.innerHTML = weatherInfo;\n//       weather.appendChild(dayDiv).classList.add(\"forecast__wrapper\");\n// });\n//  })\n//  .catch((error) => console.error(error));\n// }}\n","import { getLocation } from './weather';\n\nconst API_KEY = 'u59IF6VhLyuj5qt5wMVcLGGSUKapZTsn';\n\nconst mainPage = document.getElementById('main-page');\n\nlet photoUrl = '';\n\n// Запрос на бекенд по полю поиска\nasync function articleSearch(pageNumber, query) {\n  //   e.preventDefault();\n  //   const query = e.value;\n  const url = `https://api.nytimes.com/svc/search/v2/articlesearch.json?page=${pageNumber}&q=${query}&api-key=${API_KEY}`;\n  try {\n    return await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(resp => resp.json());\n    //   .then(res => console.log(res));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Запрос на бекенд по популярным новостям при первой загрузке страницы\nasync function fetchMostPopularNews() {\n  const url = `https://api.nytimes.com/svc/mostpopular/v2/viewed/7.json?api-key=${API_KEY}`;\n  try {\n    return await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(resp => resp.json());\n    // .then(data => console.log(data))\n  } catch (error) {\n    console.error(error);\n  }\n}\n// results.title - название статьи\n// results.abstract - начало статьи\n// results.published_date - дата статьи\n// results.url - ссылка на статью\n// results.section - категория\n// results.id - идентификатор статьи\n// results.media[0].media-metadata[2].url - ссылка на фото статьи\n\n// Рендеринг новостей по популярным новостям при первой загрузке страницы\nexport async function createPopularNews() {\n  // e.preventDefault();\n  const data = await fetchMostPopularNews();\n  console.log(data.results);\n  const newsCards = data.results.map(news => {\n    // проверка на наличие фото в новости\n    const photoUrl =\n      news.media.length !== 0\n        ? news.media[0]['media-metadata'][2].url\n        : 'https://via.placeholder.com/400';\n    const { title, abstract, published_date, url, section, id } = news;\n    const isFavorite = localStorage.getItem(`favorite_${id}`) !== null;\n    return `<div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${section}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active' : ''\n              }\" data-news-id=\"${id}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n              <h2 class=\"news-card__title\">${title}</h2>\n              <p class=\"news-card__description\">${\n                abstract.length > 100\n                  ? abstract.substring(0, 100) + '...'\n                  : abstract\n              }</p>\n              <div class=\"news-card__date-div\">\n              <div class=\"news-card__date\">${new Date(\n                published_date\n              ).toLocaleDateString()}</div>\n              <a class=\"news-card__read-more\" href=\"${url}\" target=\"_blank\">Read more</a>\n              </div>\n            </div>\n          </div>`;\n  });\n  mainPage.insertAdjacentHTML('beforeend', newsCards.join(''));\n  document.addEventListener('DOMContentLoaded', getLocation);\n}\n\n// pageNumber = номер страницы для пагинации.\n// Для тестов присваиваем руками номер, дальше в пагинации юзаем.\nconst pageNumber = 3;\n\n// Рендеринг новостей по полю поиска\nexport async function createMainPage(e) {\n  e.preventDefault();\n  const query = e.target.elements.search.value.trim();\n  console.log(query);\n  // const photoUrl = 'https://via.placeholder.com/400';\n  // mainPage.replaceChildren();\n  const data = await articleSearch(pageNumber, query);\n  // console.log(data.response.meta.hits);\n  console.dir(data.response);\n  if (data.response.docs.length === 0) {\n    console.log(data.response.docs.length);\n    mainPage.innerHTML = `<div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            </div>`;\n  }\n  const newsCards = data.response.docs.map(news => {\n    const title = news.headline.main;\n    const { _id, section_name, abstract, pub_date, web_url } = news;\n    const isFavorite = localStorage.getItem(`favorite_${_id}`) !== null;\n    return `\n          <div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${section_name}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active' : ''\n              }\" data-news-id=\"${_id}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n              <h2 class=\"news-card__title\">${title}</h2>\n              <p class=\"news-card__description\">${\n                abstract.length > 100\n                  ? abstract.substring(0, 100) + '...'\n                  : abstract\n              }</p>\n              <div class=\"news-card__date-div\">\n              <div class=\"news-card__date\">${new Date(\n                pub_date\n              ).toLocaleDateString()}</div>\n              <a class=\"news-card__read-more\" href=\"${web_url}\" target=\"_blank\">Read more</a>\n              </div>\n            </div>\n          </div>\n        `;\n  });\n  mainPage.insertAdjacentHTML('beforeend', newsCards.join(''));\n  // mainPage.innerHTML = newsCards.join('');\n  // const weatherCard = document.createElement('div');\n  // weatherCard.classList.add('wraper__weather');\n  // // mainPage.appendChild(weatherCard);\n  // weatherCard.innerHTML = `<div id=\"weather\" class=\"weather\"></div>`;\n  // // Проверка размера окна для размещения карточки погоды\n  // let position = 0;\n  // console.log(window.innerWidth);\n  // if (window.innerWidth > 800 && window.innerWidth < 1206) {\n  //   // weatherCard.style.width = '100%';\n  //   position = 1;\n  // } else if (window.innerWidth > 1206) {\n  //   position = 2;\n  //   // weatherCard.style.width = '';\n  // }\n  // console.log(position);\n  // const insertBeforeElement = mainPage.children[`${position}`];\n  // mainPage.insertBefore(weatherCard, insertBeforeElement);\n  document.addEventListener('DOMContentLoaded', getLocation);\n  e.target.reset();\n}\n\n// docs.headline.main - название статьи\n// docs.abstract - начало статьи\n// docs.pub_date - дата статьи\n// docs.web_url - ссылка на статью\n// docs.section_name - категория\n// docs._id - идентификатор статьи\n\n// Добавление/удаление новости из избранного\nfunction toggleFavorite(event) {\n  const button = event.target;\n  const newsId = button.dataset.newsId;\n\n  if (localStorage.getItem(`favorite_${newsId}`) !== null) {\n    localStorage.removeItem(`favorite_${newsId}`);\n    button.textContent = 'Add to Favorite';\n    button.classList.remove('active');\n  } else {\n    localStorage.setItem(`favorite_${newsId}`, true);\n    button.textContent = 'Remove from Favorite';\n    button.classList.add('active');\n  }\n}\n\nmainPage.addEventListener('click', event => {\n  const button = event.target.closest('.news-card__favorite-btn');\n  if (button !== null) {\n    toggleFavorite(event);\n  }\n});\n","(() => {\n   const mobileMenu = document.querySelector('.js-menu-container');\n   const openMenuBtn = document.querySelector('.js-open-menu');\n   const closeMenuBtn = document.querySelector('.js-close-menu');\n \n   const toggleMenu = () => {\n     const isMenuOpen =\n       openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n     openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n     mobileMenu.classList.toggle('is-open');\n \n     const scrollLockMethod = !isMenuOpen\n       ? 'disableBodyScroll'\n       : 'enableBodyScroll';\n     bodyScrollLock[scrollLockMethod](document.body);\n   };\n \n   openMenuBtn.addEventListener('click', toggleMenu);\n   closeMenuBtn.addEventListener('click', toggleMenu);\n \n   // Close the mobile menu on wider screens if the device orientation changes\n   window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n     if (!e.matches) return;\n     mobileMenu.classList.remove('is-open');\n     openMenuBtn.setAttribute('aria-expanded', false);\n     bodyScrollLock.enableBodyScroll(document.body);\n   });\n })();\n\n\n","const API_KEY = 'u59IF6VhLyuj5qt5wMVcLGGSUKapZTsn';\nconst URL = 'https://api.nytimes.com/svc/news/v3/content/section-list.json';\n\nconst categoryBtn = document.getElementById('category-btn');\n\nexport async function getCategories() {\n  try {\n    return await fetch(`${URL}?api-key=${API_KEY}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(resp => resp.json())\n      //   .then(cat => console.log(cat.results));\n      .then(cat => {\n        const arrayOfCategories = [];\n        for (const arr of cat.results) {\n          arrayOfCategories.push(arr.display_name);\n        }\n        // console.log(arrayOfCategories);\n        return arrayOfCategories;\n      })\n      .then(arrayOfCategories => {\n        // for (const arrbtn of arrayOfCategories) {\n        for (let i = 0; i <= 5; i++) {\n          categoryBtn.insertAdjacentHTML(\n            'beforeend',\n            `<button type=\"button\" class=\"category_btn\">${arrayOfCategories[i]}</button>`\n          );\n        }\n        categoryBtn.insertAdjacentHTML(\n          'beforeend',\n          `<select name=\"Others\" class=\"category_btn select_btn\">\n            <option value=\"Others\" hidden>Others</option>\n            </select>`\n        );\n        const selectBtn = document.querySelector('.select_btn');\n        for (let i = 6; i < arrayOfCategories.length; i++) {\n          selectBtn.insertAdjacentHTML(\n            'beforeend',\n            `<option value=\"${arrayOfCategories[i]}\">${arrayOfCategories[i]}</option>`\n          );\n        }\n      });\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { createMainPage, createPopularNews } from './js/sendrequest';\n\nimport { mobileMenu } from './js/mobileMenu';\n\nimport { weather } from './js/weather';\n\nimport { getCategories } from './js/categories';\n\nconst inputSearch = document.getElementById('searchForm');\n\ngetCategories();\n\ncreatePopularNews();\n\ninputSearch.addEventListener('submit', createMainPage);\n"],"names":["document","getElementById","$83ee39fa453a4c23$var$weather","async","$83ee39fa453a4c23$var$loadWeather","lat","lon","serverApi","innerHTML","response","fetch","method","responseResult","json","ok","data","console","log","location","name","temp","Math","round","main","weatherStatus","weather","weatherIcon","icon","currentDayOfWeek","Date","toLocaleDateString","weekday","currentDay","day","toUpperCase","currentMonth","month","currentYear","year","template","$83ee39fa453a4c23$var$getWeather","message","$83ee39fa453a4c23$export$e7fd20fad3cf4b5f","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","$457cad0f7cadee7f$var$mainPage","addEventListener","event","target","closest","button","newsId","dataset","localStorage","getItem","removeItem","textContent","classList","remove","setItem","add","$457cad0f7cadee7f$var$toggleFavorite","mobileMenu","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","toggle","bodyScrollLock","body","window","matchMedia","e","matches","enableBodyScroll","$f3b06000f9b46fbb$var$categoryBtn","$1f0dc3b9307be026$var$inputSearch","headers","then","resp","cat","arrayOfCategories","arr","results","push","display_name","i","insertAdjacentHTML","selectBtn","i1","length","error","$457cad0f7cadee7f$var$fetchMostPopularNews","newsCards","map","news","photoUrl1","media","url","title","abstract","published_date","section","id","isFavorite","substring","join","preventDefault","query","elements","search","value","trim","pageNumber1","$457cad0f7cadee7f$var$articleSearch","dir","docs","headline","_id","section_name","pub_date","web_url","reset"],"version":3,"file":"favorite.a5f43cde.js.map"}