{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAGMC,EAAeC,OAAOC,YACtBC,EAAeC,SAASC,cAAc,UAAUC,aAChDC,EAAeH,SAASC,cAAc,UAAUC,aAChDE,EAAaJ,SAASC,cAAc,mBAAmBC,aAEvDG,EAAOL,SAASC,cAAc,mBAE9BK,EAAcP,EAAeK,EAAaD,EAEhD,GAAIG,EAAcV,EAAc,CAEuB,IAA/CW,EAAOX,EAAeU,EAEsBD,EAA7CG,MAAMC,UAAYJ,EAAKH,aAAeK,EAAO,I,CAgB9CG,aAAaC,QAAQ,cAsW3B,WACEN,EAAKO,UAAY,GACjB,IAAMC,EAAOC,KAAKC,MAAML,aAAaC,QAAQ,cAGvCK,EAAiB,GACvBH,EAAKI,SAAQ,SAAAC,GACX,IAAMC,EAAO,IAAIC,KAAKC,OAAOH,EAAQI,WAC/BC,EAAgB,GAAuCC,QAAnC,IAAML,EAAKM,WAAWC,OAAM,GAAI,KAG3CF,QAFb,KACCL,EAAKQ,WAAa,IACnBD,OAAM,GAAI,KAAsBF,OAAnBL,EAAKS,eAGfZ,EAAeO,KAClBP,EAAeO,GAAiB,IAIkB,IAA9CM,EAAkBb,EAAeO,GAAeO,MACpD,SAAAC,G,OAAKA,EAAEC,QAAUd,EAAQc,K,IAGtBH,EAMCV,EADwB,IAAIC,KAAKC,OAAOQ,EAAgBP,aAE1DN,EAAeO,GAAiBP,EAAeO,GAAeU,QAC5D,SAAAF,G,OAAKA,EAAEC,QAAUd,EAAQc,K,IAE3BhB,EAAeO,GAAeW,QAAQhB,IAR0BF,EAAnDO,GAAeW,QAAQhB,E,IAcH,IAAjCiB,EAAcC,OAAOC,KAAKrB,GAAgBsB,MAC9C,SAACP,EAAGQ,G,OAAM,IAAInB,KAAKmB,GAAK,IAAInB,KAAKW,E,IAI7BS,EAAOxC,SAASyC,cAAc,MACpCD,EAAKE,UAAUC,IAAI,QACnBR,EAAYlB,SAAQ,SAAAE,GAClB,IAAMyB,EAAe5B,EAAeG,GACjCmB,MAAK,SAACP,EAAGQ,G,OAAM,IAAInB,KAAKmB,EAAEjB,UAAY,IAAIF,KAAKW,EAAET,S,IACjDuB,KAAI,SAAA3B,GACH,IAAM4B,GAAa,EAAApD,EAAAqD,mBAAkB7B,EAAQ8B,WAC7C,MAAO,iEAIkCxB,OAF1BN,EAAQ+B,IAAI,8HAInBzB,OAFiCN,EAAQgC,SAAS,iEAGjC1B,OADjBsB,EAAa,aAAe,GAC7B,oBACGtB,OADeN,EAAQ8B,UAAU,wBAGDxB,OAFhCsB,EAAa,uBAAyB,kBAAkB,+EAIhEtB,OAFwCN,EAAQc,MAAM,gEAMpDR,OAJFN,EAAQiC,YAAY,kHAOnB3B,OAHCN,EAAQkC,YAAY,oEAItB5B,OADCN,EAAQmC,SACT,sH,IAQHC,KAAK,IAEFC,EAAW,4EAKM/B,OAHHL,EAAK,4EAGWK,OAAboB,EAAa,gBAEpCJ,EAAKgB,mBAAmB,YAAaD,E,IAGvClD,EAAKoD,YAAYjB,E,CAhcfkB,GATkBrD,EAAjBsD,iBAAiB,SAAS,SAAAC,GAEZ,OADAA,EAAMC,OAAOC,QAAQ,8BAElC,EAAApE,EAAAqE,oBAAmBH,E","sources":["src/js/read-markup-test.js"],"sourcesContent":["//===============Для кнопок read more та favorite================\nimport { toggleFavoriteNews, isNewsInFavorites } from './local-storage';\n\n//======================= Задаємо мінімальну висоту сторінки =============\nconst windowHeight = window.innerHeight;\nconst headerHeight = document.querySelector('header').offsetHeight;\nconst footerHeight = document.querySelector('footer').offsetHeight;\nconst mainHeight = document.querySelector('.read-container').offsetHeight;\n\nconst main = document.querySelector('.read-container');\n\nconst totalHeight = headerHeight + mainHeight + footerHeight;\n\nif (totalHeight < windowHeight) {\n  // розраховуємо різницю між висотою вьюпорта і висотою сторінки\n  const diff = windowHeight - totalHeight;\n  // робимо мінімальну висоту сторінки рівною висоті вьюпорта\n  main.style.minHeight = main.offsetHeight + diff + 'px';\n}\n\nisReadArticles();\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// якщо щось ламається при більше ніж 1 дні новин в стораджі, \n// то фіксити наступні 6 строк\nmain.addEventListener('click', event => {\n    const button = event.target.closest('.news-card__favorite-btn');\n    if (button !== null) {\n      toggleFavoriteNews(event);\n    }\n  });\n\nfunction isReadArticles() {\n  if (localStorage.getItem('read_news')) {\n    readMarkup();\n  }\n}\n\n// // ======== вар 1 ==============================\n// // Отримуємо значення ключа з локального сховища\n// const readNews = JSON.parse(localStorage.getItem(\"read_news\"));\n\n// // Сортуємо статті по властивості dateRead в порядку спадання\n// readNews.sort((a, b) => b.dateRead - a.dateRead);\n\n// // Створюємо об'єкт для збереження статей за датою\n// const newsByDate = {};\n\n// // Проходимось по всіх статтях та розподіляємо їх за датами\n// readNews.forEach(article => {\n//   const date = new Date(Number(article.dateRead));\n//   const day = date.getDate();\n//   const month = date.getMonth() + 1;\n//   const year = date.getFullYear();\n//   const formattedDate = `${day}/${month}/${year}`;\n\n//   if (!newsByDate[formattedDate]) {\n//     newsByDate[formattedDate] = [article];\n//   } else {\n//     newsByDate[formattedDate].push(article);\n//   }\n// });\n\n// // Виводимо статті по датам з відповідними заголовками\n// for (const [date, articles] of Object.entries(newsByDate)) {\n//   const header = document.createElement(\"h2\");\n//   header.textContent = date;\n//   document.body.appendChild(header);\n\n//   articles.forEach(article => {\n//     const articleDiv = document.createElement(\"div\");\n\n//     const title = document.createElement(\"h3\");\n//     title.textContent = article.title;\n//     articleDiv.appendChild(title);\n\n//     const description = document.createElement(\"p\");\n//     description.textContent = article.description;\n//     articleDiv.appendChild(description);\n\n//     const readMoreLink = document.createElement(\"a\");\n//     readMoreLink.href = article.readMore;\n//     readMoreLink.textContent = \"Read more\";\n//     articleDiv.appendChild(readMoreLink);\n\n//     readMain.appendChild(articleDiv);\n//   });\n// }\n\n// // =============== вар 2 ===========================\n// const readNews = JSON.parse(localStorage.getItem('read_news'));\n\n// // Сортуємо масив за властивістю dateRead\n// readNews.sort((a, b) => b.dateRead - a.dateRead);\n\n// // Створюємо список ul\n// const ul = document.createElement('ul');\n\n// // Проходимося по кожному об'єкту і додаємо елемент li з заголовком статті та div зі списком прочитаних статей\n// for (const article of readNews) {\n//   const li = document.createElement('li');\n//   const title = document.createElement('h2');\n//   const date = new Date(parseInt(article.dateRead)).toLocaleDateString('en-GB'); // Форматуємо дату у форматі дд/мм/рррр\n//   title.textContent = `${date}: ${article.title}`;\n//   const div = document.createElement('div');\n//   const p = document.createElement('p');\n//   p.textContent = 'Read articles:';\n//   div.appendChild(p);\n//   for (const readArticle of readNews.filter(a => a.dateRead === article.dateRead)) {\n//     const a = document.createElement('a');\n//     a.href = readArticle.readMore;\n//     a.textContent = readArticle.title;\n//     div.appendChild(a);\n//   }\n//   li.appendChild(title);\n//   li.appendChild(div);\n//   ul.appendChild(li);\n// }\n\n// // Додаємо список на сторінку\n// readMain.appendChild(ul);\n\n// // ===================== 3 вар ==================\n// const readNews = JSON.parse(localStorage.getItem('read_news'));\n\n// // Створюємо об'єкт, щоб зберегти список статей з однаковим заголовком\n// const articlesByTitle = {};\n\n// // Проходимося по кожній статті та додаємо її до відповідного масиву в об'єкті\n// for (const article of readNews) {\n// if (!articlesByTitle[article.title]) {\n// articlesByTitle[article.title] = [article];\n// } else {\n// articlesByTitle[article.title].push(article);\n// }\n// }\n\n// // Створюємо список ul\n// const ul = document.createElement('ul');\n\n// // Проходимося по кожному масиву статей з однаковим заголовком та додаємо елемент li з заголовком статті та div зі списком прочитаних статей\n// for (const articles of Object.values(articlesByTitle)) {\n// const li = document.createElement('li');\n// const title = document.createElement('h2');\n// const date = new Date(parseInt(articles[0].dateRead)).toLocaleDateString('en-GB'); // Форматуємо дату у форматі дд/мм/рррр\n// title.textContent = `${date}: ${articles[0].title}`;\n// const div = document.createElement('div');\n// const p = document.createElement('p');\n// p.textContent = 'Read articles:';\n// div.appendChild(p);\n// for (const article of articles) {\n// const a = document.createElement('a');\n// a.href = article.readMore;\n// a.textContent = article.title;\n// div.appendChild(a);\n// }\n// li.appendChild(title);\n// li.appendChild(div);\n// ul.appendChild(li);\n// }\n\n// // Додаємо список на сторінку\n// readMain.appendChild(ul);\n\n// // ============ вар 4 ==============================\n// const readNews = JSON.parse(localStorage.getItem('read_news'));\n\n// // Створюємо об'єкт для зберігання статей за датою\n// const articlesByDate = {};\n\n// // Групуємо статті за датою\n// for (const article of readNews) {\n//   const date = new Date(parseInt(article.dateRead)).toLocaleDateString('en-GB');\n//   if (!articlesByDate[date]) {\n//     articlesByDate[date] = [article];\n//   } else {\n//     articlesByDate[date].push(article);\n//   }\n// }\n\n// // Створюємо список ul\n// const ul = document.createElement('ul');\n\n// // Проходимося по кожній даті і створюємо відповідні елементи списку\n// for (const date in articlesByDate) {\n//   const li = document.createElement('li');\n//   const title = document.createElement('h2');\n//   title.textContent = date;\n//   li.appendChild(title);\n\n//   const articles = articlesByDate[date];\n\n//   // Сортуємо статті за спаданням за датою\n//   articles.sort((a, b) => b.dateRead - a.dateRead);\n\n//   const div = document.createElement('div');\n//   const p = document.createElement('p');\n//   p.textContent = 'Read articles:';\n//   div.appendChild(p);\n\n//   // Додаємо посилання на прочитані статті\n//   for (const article of articles) {\n//     const a = document.createElement('a');\n//     a.href = article.readMore;\n//     a.textContent = article.title;\n//     div.appendChild(a);\n//   }\n\n//   li.appendChild(div);\n//   ul.appendChild(li);\n// }\n\n// // Додаємо список на сторінку\n// readMain.appendChild(ul);\n\n// readMain.insertAdjacentElement\n\n// // ================== вар 5 ========================\n// const readNews = JSON.parse(localStorage.getItem('read_news'));\n\n// // Створюємо об'єкт для зберігання статей за датою\n// const articlesByDate = {};\n\n// // Групуємо статті за датою\n// for (const article of readNews) {\n// const date = new Date(parseInt(article.dateRead)).toLocaleDateString('en-GB');\n// if (!articlesByDate[date]) {\n// articlesByDate[date] = [article];\n// } else {\n// articlesByDate[date].push(article);\n// }\n// }\n\n// // Створюємо список ul\n// const ul = document.createElement('ul');\n\n// // Проходимося по кожній даті і створюємо відповідні елементи списку\n// for (const date in articlesByDate) {\n// const articles = articlesByDate[date];\n\n// // Сортуємо статті за спаданням за датою\n// articles.sort((a, b) => b.dateRead - a.dateRead);\n\n// let articleLinks = '';\n// for (const article of articles) {\n// articleLinks += `<a href=\"${article.readMore}\">${article.title}</a>`;\n// }\n\n// const li = `<li> <h2>${date}</h2> <div> <p>Read articles:</p> ${articleLinks} </div> </li>` ;\n\n// ul.insertAdjacentHTML('beforeend', li);\n// }\n\n// // Додаємо список на сторінку\n// readMain.insertAdjacentElement('beforeend', ul);\n\n// // ============ вар 6 ======================\n// const news = JSON.parse(localStorage.getItem(\"read_news\"));\n\n// // створюємо об'єкт, де властивості - це дата, а значення - це масив статей\n// const articlesByDate = {};\n// news.forEach(article => {\n//   const date = new Date(Number(article.dateRead));\n//   const formattedDate = `${('0' + date.getDate()).slice(-2)}/${('0' + (date.getMonth() + 1)).slice(-2)}/${date.getFullYear()}`;\n\n//   // створюємо масив статей для даної дати, якщо його ще немає\n//   if (!articlesByDate[formattedDate]) {\n//     articlesByDate[formattedDate] = [];\n//   }\n\n//   // перевіряємо, чи є стаття з таким заголовком вже доданою раніше\n//   const existingArticle = articlesByDate[formattedDate].find(a => a.title === article.title);\n\n//   if (!existingArticle) {\n//     // якщо статті з таким заголовком ще не було, додаємо її до масиву статей даної дати\n//     articlesByDate[formattedDate].unshift(article);\n//   } else {\n//     // якщо стаття з таким заголовком вже є, то порівнюємо дати і залишаємо тільки більш пізню\n//     const existingArticleDate = new Date(Number(existingArticle.dateRead));\n//     if (date > existingArticleDate) {\n//       articlesByDate[formattedDate] = articlesByDate[formattedDate].filter(a => a.title !== article.title);\n//       articlesByDate[formattedDate].unshift(article);\n//     }\n//   }\n// });\n\n// // сортуємо об'єкт за датою в зворотньому порядку\n// const sortedDates = Object.keys(articlesByDate).sort((a, b) => new Date(b) - new Date(a));\n\n// // створюємо елементи списку і додаємо їх до сторінки\n// const list = document.createElement(\"ul\");\n// sortedDates.forEach(date => {\n//   const listItem = document.createElement(\"li\");\n//   listItem.textContent = date;\n\n//   const articlesList = document.createElement(\"ul\");\n//   articlesByDate[date].sort((a, b) => new Date(b.dateRead) - new Date(a.dateRead)).forEach(article => {\n//     const articleListItem = document.createElement(\"li\");\n//     const articleLink = document.createElement(\"a\");\n//     articleLink.href = article.readMore;\n//     articleLink.textContent = article.title;\n//     articleListItem.appendChild(articleLink);\n//     articlesList.appendChild(articleListItem);\n//   });\n\n//   listItem.appendChild(articlesList);\n//   list.appendChild(listItem);\n// });\n\n// readMain.appendChild(list);\n\n// // ============= вар 7! ==============================\n// const news = JSON.parse(localStorage.getItem(\"read_news\"));\n\n// // створюємо об'єкт, де властивості - це дата, а значення - це масив статей\n// const articlesByDate = {};\n// news.forEach(article => {\n// const date = new Date(Number(article.dateRead));\n// const formattedDate = `${('0' + date.getDate()).slice(-2)}/${('0' + (date.getMonth() + 1)).slice(-2)}/${date.getFullYear()}`;\n\n// // створюємо масив статей для даної дати, якщо його ще немає\n// if (!articlesByDate[formattedDate]) {\n// articlesByDate[formattedDate] = [];\n// }\n\n// // перевіряємо, чи є стаття з таким заголовком вже доданою раніше\n// const existingArticle = articlesByDate[formattedDate].find(a => a.title === article.title);\n\n// if (!existingArticle) {\n// // якщо статті з таким заголовком ще не було, додаємо її до масиву статей даної дати\n// articlesByDate[formattedDate].unshift(article);\n// } else {\n// // якщо стаття з таким заголовком вже є, то порівнюємо дати і залишаємо тільки більш пізню\n// const existingArticleDate = new Date(Number(existingArticle.dateRead));\n// if (date > existingArticleDate) {\n// articlesByDate[formattedDate] = articlesByDate[formattedDate].filter(a => a.title !== article.title);\n// articlesByDate[formattedDate].unshift(article);\n// }\n// }\n// });\n\n// // сортуємо об'єкт за датою в зворотньому порядку\n// const sortedDates = Object.keys(articlesByDate).sort((a, b) => new Date(b) - new Date(a));\n\n// // створюємо елементи списку і додаємо їх до сторінки\n// // const list = document.createElement(\"ul\");\n// // const isFavorite = isNewsInFavorites(article.favoritId);\n// sortedDates.forEach(date => {\n// const articlesList = articlesByDate[date]\n// .sort((a, b) => new Date(b.dateRead) - new Date(a.dateRead))\n// .map(article => `<li>\n//           <div class=\"news-card\">\n//             <img src=${article.img} alt=\"Article illustration\" />\n//             <div class=\"news-card__info\">\n//               <div class=\"news-card__category\">${article.category}</div>\n\n//          <h2 class=\"news-card__title\">${article.title}</h2>\n//          <p class=\"news-card__description\">\n//         ${article.description}\n//         </p>\n//         <div class=\"news-card__date-div\">\n//           <div class=\"news-card__date\">\n//           ${article.publishDate}\n//        </div>\n//          <a class=\"news-card__read-more\" href=\"${article.readMore}\" target=\"blank\"\n//          >Read more</a\n//         >\n//          </div>\n//         </div>\n//         </div>\n//         </li>` ).join('');\n\n// /* <button class=\"news-card__favorite-btn ${\n//                 isFavorite ? 'active_btn' : ''\n//               }\" data-news-id=\"${article.favoritId}\">\n//                 ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n//               </button>         */\n\n// const listItem = `<li class=\"read-item\">\n//       <div class=\"read-title\">\n//         <h2 class=\"read-date\">${date}</h2>\n//         <div class=\"read-arrow\"></div>\n//       </div>\n//       <ul class=\"read-gallery\">${articlesList}</ul> </li> ` ;\n\n// list.insertAdjacentHTML('beforeend', listItem);\n// });\n\n// readMain.appendChild(list);\n\n// ====================var8====================\nfunction readMarkup() {\n  main.innerHTML = '';\n  const news = JSON.parse(localStorage.getItem('read_news'));\n\n  // створюємо об'єкт, де властивості - це дата, а значення - це масив статей\n  const articlesByDate = {};\n  news.forEach(article => {\n    const date = new Date(Number(article.dateRead));\n    const formattedDate = `${('0' + date.getDate()).slice(-2)}/${(\n      '0' +\n      (date.getMonth() + 1)\n    ).slice(-2)}/${date.getFullYear()}`;\n\n    // створюємо масив статей для даної дати, якщо його ще немає\n    if (!articlesByDate[formattedDate]) {\n      articlesByDate[formattedDate] = [];\n    }\n\n    // перевіряємо, чи є стаття з таким заголовком вже доданою раніше\n    const existingArticle = articlesByDate[formattedDate].find(\n      a => a.title === article.title\n    );\n\n    if (!existingArticle) {\n      // якщо статті з таким заголовком ще не було, додаємо її до масиву статей даної дати\n      articlesByDate[formattedDate].unshift(article);\n    } else {\n      // якщо стаття з таким заголовком вже є, то порівнюємо дати і залишаємо тільки більш пізню\n      const existingArticleDate = new Date(Number(existingArticle.dateRead));\n      if (date > existingArticleDate) {\n        articlesByDate[formattedDate] = articlesByDate[formattedDate].filter(\n          a => a.title !== article.title\n        );\n        articlesByDate[formattedDate].unshift(article);\n      }\n    }\n  });\n\n  // сортуємо об'єкт за датою в зворотньому порядку\n  const sortedDates = Object.keys(articlesByDate).sort(\n    (a, b) => new Date(b) - new Date(a)\n  );\n\n  // створюємо елементи списку і додаємо їх до сторінки\n  const list = document.createElement('ul');\n  list.classList.add('read');\n  sortedDates.forEach(date => {\n    const articlesList = articlesByDate[date]\n      .sort((a, b) => new Date(b.dateRead) - new Date(a.dateRead))\n      .map(article => {\n        const isFavorite = isNewsInFavorites(article.favoritId);\n        return `<li>\n          <div class=\"news-card\">\n            <img src=${article.img} alt=\"Article illustration\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${article.category}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active_btn' : ''\n              }\" data-news-id=\"${article.favoritId}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n                   <h2 class=\"news-card__title\">${article.title}</h2>\n         <p class=\"news-card__description\">\n        ${article.description}\n        </p>\n        <div class=\"news-card__date-div\">\n          <div class=\"news-card__date\">\n          ${article.publishDate}\n       </div>\n         <a class=\"news-card__read-more\" href=\"${\n           article.readMore\n         }\" target=\"blank\"\n         >Read more</a\n        >\n         </div>\n        </div>\n        </div>\n        </li>`;\n      })\n      .join('');\n\n    const listItem = `<li class=\"read-item\">\n <div class=\"read-title\">\n<h2 class=\"read-date\">${date}</h2>\n<div class=\"read-arrow\"></div>\n</div>\n<ul class=\"read-gallery\">${articlesList}</ul> </li> `;\n\n    list.insertAdjacentHTML('beforeend', listItem);\n  });\n\n  main.appendChild(list);\n}\n"],"names":["$4LMMA","parcelRequire","$aa510153b29e37f5$var$windowHeight","window","innerHeight","$aa510153b29e37f5$var$headerHeight","document","querySelector","offsetHeight","$aa510153b29e37f5$var$footerHeight","$aa510153b29e37f5$var$mainHeight","$aa510153b29e37f5$var$main","$aa510153b29e37f5$var$totalHeight","$aa510153b29e37f5$var$diff","style","minHeight","localStorage","getItem","innerHTML","news","JSON","parse","articlesByDate","forEach","article","date","Date","Number","dateRead","formattedDate","concat","getDate","slice","getMonth","getFullYear","existingArticle","find","a","title","filter","unshift","sortedDates","Object","keys","sort","b","list","createElement","classList","add","articlesList","map","isFavorite","isNewsInFavorites","favoritId","img","category","description","publishDate","readMore","join","listItem","insertAdjacentHTML","appendChild","$aa510153b29e37f5$var$readMarkup","addEventListener","event","target","closest","toggleFavoriteNews"],"version":3,"file":"read.4137cfb5.js.map"}