{"mappings":"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","sources":["src/js/weather.js","src/js/sendrequest.js","src/js/mobileMenu.js","src/js/categories.js","src/index.js"],"sourcesContent":["\"use strict\";\n// second req\n\nexport const weather = document.getElementById(`weather`);\nexport const APP_ID = 'f5984abfd7be02d0f0f71396692dd7ba';\nexport const defaultCity = 'Kyiv'\n\n\n// ---------------   Ищем геопозицию  ---------------  //\n\n// Проверочка наличия формы\n// if (weather) {\n//   startWeatherApp();\n// }\n\n\nexport function startWeatherApp() {\n      weather.innerHTML = `<div class=\"weather__loading\">Wait a second plz...</div>`;\n      // weather.innerHTML = `<div class=\"weather__loading\"><img src=\"./src/images/1492.gif\" alt=\"Loading...\"></div>`;\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          let lat = position.coords.latitude;\n          let lon = position.coords.longitude;\n          // вызываем функцию для получения прогноза погоды\n          getWeatherForOneDay(lat, lon);\n        },\n        (error) => {\n          // обрабатываем ошибку получения геолокации\n          console.error(error);\n        }\n      );\n    }\n\n// ---------------   Функция для получения прогноза погоды на 1 день  ---------------  //\n\nexport async function getWeatherForOneDay(lat, lon) {\n  // Вставляем условие, что если не работает геолокация на Браузере, то мы определяем погоду для Киева //\n  let weatherForToday;\n  if (lat && lon) {\n    weatherForToday = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APP_ID}&units=metric`;\n  } else {\n    weatherForToday = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${defaultCity}&appid=${APP_ID}`;\n  }\n  // Вставляем гифку пока ожидаем ответ от АПИ\n  // weather.innerHTML = `<div class=\"weather__loading\"><img src=\"loading.gif\" alt=\"Loading...\"></div>`;\n  try {\n    const response = await fetch(weatherForToday);\n    const responseResult = await response.json();\n    // Если мы получили респонс, то запускаем функцию работы с ДАННЫМИ dataForOneDay\n    if (response.ok) {\n          dataForOneDay(responseResult);\n        } else {\n          weather.innerHTML = responseResult.message;\n        }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// ---------------   Функция обработки data API погоды на 1 день  ---------------  //\n\nexport function dataForOneDay(data) {\n    //  Обрабатывем и выводим данные\n    const lat = data.coord.lat;\n    const lon = data.coord.lon;\n    console.log(data);\n    const location = data.name;\n    const temp = Math.round(data.main.temp);\n    const weatherStatus = data.weather[0].main;\n    const weatherIcon = data.weather[0].icon;\n    const currentDayOfWeek = new Date().toLocaleDateString('en-US', { weekday: 'short' });\n    const currentDay = new Date().toLocaleDateString('en-US', { day: 'numeric' }).toUpperCase();\n    const currentMonth = new Date().toLocaleDateString('en-US', { month: 'short' });\n    const currentYear = new Date().toLocaleDateString('en-US', { year: 'numeric' }).toUpperCase();\n    // Разметка HTML\n    // !!!!!!! НУЖНО РАЗОБРАТЬСЯ С СВГ и вставить \n              // <img src=\"Vector.svg\" alt=\"checkpoint\">\n        let template = `<div class=\"header__weather\">\n          <div class=\"temp__info\">${temp}°</div>\n          <div class=\"status__location\">\n            <div class=\"status\">\n              <p class=\"status__name\">${weatherStatus}</p>\n            </div>\n            <div class=\"location\">\n              <p class=\"location__name\">${location}</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"icon__picture\">\n            <img class=\"weather__picture\" src=\"https://openweathermap.org/img/w/${weatherIcon}.png\" alt=\"Clouds\">\n          </div>\n          <div class=\"date__wrapper\">\n            <div class=\"day\">${currentDayOfWeek}</div>\n            <div class=\"date\">${currentDay} ${currentMonth} ${currentYear}</div>\n          </div>\n          <button class=\"weatherForweek\" id=\"weatherForweek\">Weather for 5 days</button>\n          `;\n        weather.innerHTML = template;\n        const weatherForweek = document.getElementById(`weatherForweek`);\n        weatherForweek.addEventListener(`click`, () => getWeatherForFiveDays(lat, lon));\n    }\n\n\n// ---------------   Функция для получения прогноза погоды на 5 дней  ---------------  //\n\n\nexport async function getWeatherForFiveDays(lat, lon) {\n    const weatherForFiveDay = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${APP_ID}&units=metric`;\n    try {\n      const response = await fetch(weatherForFiveDay);\n      const responseResultWeek = await response.json();\n      if (response.ok) {\n        dataForWeek(responseResultWeek);\n      } else {\n        weather.innerHTML = responseResultWeek.message;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n// ---------------   Функция обработки data API погоды на 1 день  ---------------  //\n\nexport function dataForWeek(data) {\n  const weatherData = [];\n   // Парсим данные о погоде на 7 дней\n   let currentDate = new Date(data.list[0].dt_txt).getDate(); // Проверяем дату\n   let dayOfWeek = new Date(data.list[0].dt_txt).toLocaleDateString(\"en-US\", { weekday: \"short\" }); // Получаем день недели\n   let tempMin = data.list[0].main.temp;\n   let tempMax = data.list[0].main.temp;\n   let iconCode = data.list[0].weather[0].icon;\n   let iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n   for (let i = 1; i < data.list.length; i++) {\n     const dt = new Date(data.list[i].dt_txt);\n     const date = dt.getDate();\n     if (date !== currentDate) { // Считаем данные за текущий день и добавляем в массив\n       const month = dt.toLocaleDateString(\"en-US\", { month: \"short\" });\n       weatherData.push({\n         dayOfWeek,\n         dayOfMonth: currentDate,\n         month,\n         tempMin,\n         tempMax,\n         iconUrl,\n       });\n       // Обновляем данные для следующего дня\n       currentDate = date;\n       dayOfWeek = dt.toLocaleDateString(\"en-US\", { weekday: \"short\" });\n       tempMin = data.list[i].main.temp;\n       tempMax = data.list[i].main.temp;\n       iconCode = data.list[i].weather[0].icon;\n       iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n     } else { \n      // Обновляем данные для текущего дня\n       if (data.list[i].main.temp < tempMin) {\n         tempMin = data.list[i].main.temp;\n       }\n       if (data.list[i].main.temp > tempMax) {\n         tempMax = data.list[i].main.temp;\n       }\n     }\n   }\n\n  //  Разметка HTML!!!\n    weather.innerHTML = '';\n  //  Кнопка BACK\n    const backBtn = document.createElement(\"button\");\n    weather.appendChild(backBtn).classList.add(\"backBtn\");\n    backBtn.innerHTML = `Back`\n    backBtn.addEventListener(`click`, () => {\n      window.location.reload();\n    });\n\n    weatherData.forEach((day) => {\n      const { dayOfWeek, dayOfMonth, month, tempMin, tempMax, iconUrl } = day;\n\n      const weatherInfo = `\n        <div class=\"day__card\">\n          <div class=\"dayOfMonth\">${dayOfMonth}</div>\n          <div class=\"dayOfWeek\">${dayOfWeek}</div>\n        </div>\n        <div class=\"iconUrl\">\n            <img class=\"weather__picture__5days\" src=\"${iconUrl}\" alt=\"weather4days\">\n          </div>\n        <div class=\"icon__status\">\n          <div class=\"tempMax\">Max temp:${Math.round(tempMax)}°</div>\n          <div class=\"tempMin\">Min temp:${Math.round(tempMin)}°</div>\n        </div>\n      `;\n      const dayDiv = document.createElement(\"div\");\n      dayDiv.innerHTML = weatherInfo;\n      weather.appendChild(dayDiv).classList.add(\"forecast__wrapper\");\n});\n}","import { startWeatherApp } from './weather';\n\nconst API_KEY = 'u59IF6VhLyuj5qt5wMVcLGGSUKapZTsn';\n\nconst mainPage = document.getElementById('main-page');\n\n// let photoUrl = '';\n\n// Запрос на бекенд по полю поиска\nasync function articleSearch(pageNumber, query) {\n  //   e.preventDefault();\n  //   const query = e.value;\n  const url = `https://api.nytimes.com/svc/search/v2/articlesearch.json?page=${pageNumber}&q=${query}&api-key=${API_KEY}`;\n  try {\n    return await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(resp => resp.json());\n    //   .then(res => console.log(res));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Запрос на бекенд по популярным новостям при первой загрузке страницы\nasync function fetchMostPopularNews() {\n  const url = `https://api.nytimes.com/svc/mostpopular/v2/viewed/7.json?api-key=${API_KEY}`;\n  try {\n    return await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(resp => resp.json());\n    // .then(data => console.log(data))\n  } catch (error) {\n    console.error(error);\n  }\n}\n// results.title - название статьи\n// results.abstract - начало статьи\n// results.published_date - дата статьи\n// results.url - ссылка на статью\n// results.section - категория\n// results.id - идентификатор статьи\n// results.media[0].media-metadata[2].url - ссылка на фото статьи\n\n// Рендеринг новостей по популярным новостям при первой загрузке страницы\nexport async function createPopularNews() {\n  // e.preventDefault();\n  const data = await fetchMostPopularNews();\n  console.log(data.results);\n  const newsCards = data.results.map(news => {\n    // проверка на наличие фото в новости\n    const photoUrl =\n      news.media.length !== 0\n        ? news.media[0]['media-metadata'][2].url\n        : 'https://via.placeholder.com/400';\n    const { title, abstract, published_date, url, section, id } = news;\n    const isFavorite = localStorage.getItem(`favorite_${id}`) !== null;\n    return `<div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${section}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active' : ''\n              }\" data-news-id=\"${id}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n              <h2 class=\"news-card__title\">${title}</h2>\n              <p class=\"news-card__description\">${\n                abstract.length > 100\n                  ? abstract.substring(0, 100) + '...'\n                  : abstract\n              }</p>\n              <div class=\"news-card__date-div\">\n              <div class=\"news-card__date\">${new Date(\n                published_date\n              ).toLocaleDateString()}</div>\n              <a class=\"news-card__read-more\" href=\"${url}\" target=\"_blank\">Read more</a>\n              </div>\n            </div>\n          </div>`;\n  });\n  mainPage.insertAdjacentHTML('beforeend', newsCards.join(''));\n  document.addEventListener('DOMContentLoaded', getLocation);\n}\n\n// pageNumber = номер страницы для пагинации.\n// Для тестов присваиваем руками номер, дальше в пагинации юзаем.\nconst pageNumber = 3;\n\n// Рендеринг новостей по полю поиска\nexport async function createMainPage(e) {\n  e.preventDefault();\n  const query = e.target.elements.search.value.trim();\n  console.log(query);\n  const photoUrl = 'https://via.placeholder.com/400';\n  mainPage.replaceChildren();\n  const data = await articleSearch(pageNumber, query);\n  // console.log(data.response.meta.hits);\n  console.dir(data.response);\n  if (data.response.docs.length === 0) {\n    console.log(data.response.docs.length);\n    mainPage.innerHTML = `<div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            </div>`;\n  }\n  const newsCards = data.response.docs.map(news => {\n    const title = news.headline.main;\n    const { _id, section_name, abstract, pub_date, web_url } = news;\n    const isFavorite = localStorage.getItem(`favorite_${_id}`) !== null;\n    return `\n          <div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${section_name}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active' : ''\n              }\" data-news-id=\"${_id}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n              <h2 class=\"news-card__title\">${title}</h2>\n              <p class=\"news-card__description\">${\n                abstract.length > 100\n                  ? abstract.substring(0, 100) + '...'\n                  : abstract\n              }</p>\n              <div class=\"news-card__date-div\">\n              <div class=\"news-card__date\">${new Date(\n                pub_date\n              ).toLocaleDateString()}</div>\n              <a class=\"news-card__read-more\" href=\"${web_url}\" target=\"_blank\">Read more</a>\n              </div>\n            </div>\n          </div>\n        `;\n  });\n  mainPage.insertAdjacentHTML('beforeend', newsCards.join(''));\n  // mainPage.innerHTML = newsCards.join('');\n  // const weatherCard = document.createElement('div');\n  // weatherCard.classList.add('wraper__weather');\n  // // mainPage.appendChild(weatherCard);\n  // weatherCard.innerHTML = `<div id=\"weather\" class=\"weather\"></div>`;\n  // // Проверка размера окна для размещения карточки погоды\n  // let position = 0;\n  // console.log(window.innerWidth);\n  // if (window.innerWidth > 800 && window.innerWidth < 1206) {\n  //   // weatherCard.style.width = '100%';\n  //   position = 1;\n  // } else if (window.innerWidth > 1206) {\n  //   position = 2;\n  //   // weatherCard.style.width = '';\n  // }\n  // console.log(position);\n  // const insertBeforeElement = mainPage.children[`${position}`];\n  // mainPage.insertBefore(weatherCard, insertBeforeElement);\n  document.addEventListener('DOMContentLoaded', startWeatherApp);\n  e.target.reset();\n}\n\n// docs.headline.main - название статьи\n// docs.abstract - начало статьи\n// docs.pub_date - дата статьи\n// docs.web_url - ссылка на статью\n// docs.section_name - категория\n// docs._id - идентификатор статьи\n\n// Добавление/удаление новости из избранного\nfunction toggleFavorite(event) {\n  const button = event.target;\n  const newsId = button.dataset.newsId;\n\n  if (localStorage.getItem(`favorite_${newsId}`) !== null) {\n    localStorage.removeItem(`favorite_${newsId}`);\n    button.textContent = 'Add to Favorite';\n    button.classList.remove('active');\n  } else {\n    localStorage.setItem(`favorite_${newsId}`, true);\n    button.textContent = 'Remove from Favorite';\n    button.classList.add('active');\n  }\n}\n\nmainPage.addEventListener('click', event => {\n  const button = event.target.closest('.news-card__favorite-btn');\n  if (button !== null) {\n    toggleFavorite(event);\n  }\n});\n","(() => {\n   const mobileMenu = document.querySelector('.js-menu-container');\n   const openMenuBtn = document.querySelector('.js-open-menu');\n   const closeMenuBtn = document.querySelector('.js-close-menu');\n \n   const toggleMenu = () => {\n     const isMenuOpen =\n       openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n     openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n     mobileMenu.classList.toggle('is-open');\n \n     const scrollLockMethod = !isMenuOpen\n       ? 'disableBodyScroll'\n       : 'enableBodyScroll';\n     bodyScrollLock[scrollLockMethod](document.body);\n   };\n \n   openMenuBtn.addEventListener('click', toggleMenu);\n   closeMenuBtn.addEventListener('click', toggleMenu);\n \n   // Close the mobile menu on wider screens if the device orientation changes\n   window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n     if (!e.matches) return;\n     mobileMenu.classList.remove('is-open');\n     openMenuBtn.setAttribute('aria-expanded', false);\n     bodyScrollLock.enableBodyScroll(document.body);\n   });\n })();\n\n\n","const API_KEY = 'u59IF6VhLyuj5qt5wMVcLGGSUKapZTsn';\nconst URL = 'https://api.nytimes.com/svc/news/v3/content/section-list.json';\n\nconst categoryBtn = document.getElementById('category-btn');\n\nexport async function getCategories() {\n  try {\n    return await fetch(`${URL}?api-key=${API_KEY}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(resp => resp.json())\n      //   .then(cat => console.log(cat.results));\n      .then(cat => {\n        const arrayOfCategories = [];\n        for (const arr of cat.results) {\n          arrayOfCategories.push(arr.display_name);\n        }\n        // console.log(arrayOfCategories);\n        return arrayOfCategories;\n      })\n      .then(arrayOfCategories => {\n        // for (const arrbtn of arrayOfCategories) {\n        for (let i = 0; i <= 5; i++) {\n          categoryBtn.insertAdjacentHTML(\n            'beforeend',\n            `<button type=\"button\" class=\"category_btn\">${arrayOfCategories[i]}</button>`\n          );\n        }\n        categoryBtn.insertAdjacentHTML(\n          'beforeend',\n          `<select name=\"Others\" class=\"category_btn select_btn\">\n            <option value=\"Others\" hidden>Others</option>\n            </select>`\n        );\n        const selectBtn = document.querySelector('.select_btn');\n        for (let i = 6; i < arrayOfCategories.length; i++) {\n          selectBtn.insertAdjacentHTML(\n            'beforeend',\n            `<option value=\"${arrayOfCategories[i]}\">${arrayOfCategories[i]}</option>`\n          );\n        }\n      });\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { createMainPage, createPopularNews } from './js/sendrequest';\n\nimport { mobileMenu } from './js/mobileMenu';\n\nimport { startWeatherApp } from './js/weather';\n\nimport { getCategories } from './js/categories';\n\nconst inputSearch = document.getElementById('searchForm');\n\ngetCategories();\n\nstartWeatherApp();\n\ncreatePopularNews();\n\n\ninputSearch.addEventListener('submit', createMainPage);\n"],"names":["$83ee39fa453a4c23$export$a9542bf20e849d84","document","getElementById","$83ee39fa453a4c23$export$311e4ffba3b80564","innerHTML","navigator","geolocation","getCurrentPosition","position","async","lat","lon","weatherForToday","response","fetch","responseResult","json","ok","data","coord","console","log","location","name","temp","Math","round","main","weatherStatus","weather","weatherIcon","icon","currentDayOfWeek","Date","toLocaleDateString","weekday","currentDay","day","toUpperCase","currentMonth","month","currentYear","year","template","addEventListener","weatherForFiveDay","responseResultWeek","weatherData","currentDate","list","dt_txt","getDate","dayOfWeek1","tempMin1","tempMax1","iconCode","iconUrl1","i","length","dt","date","push","dayOfWeek","dayOfMonth","tempMin","tempMax","iconUrl","backBtn","createElement","appendChild","classList","add","window","reload","forEach","weatherInfo","dayDiv","$83ee39fa453a4c23$export$1cce9a46d69f2581","message","error","$83ee39fa453a4c23$export$ddb0c78b214e3723","$83ee39fa453a4c23$export$7030ba3082c6d73c","$83ee39fa453a4c23$export$7f73e371aa68beb2","coords","latitude","longitude","$457cad0f7cadee7f$var$mainPage","event","target","closest","button","newsId","dataset","localStorage","getItem","removeItem","textContent","remove","setItem","$457cad0f7cadee7f$var$toggleFavorite","mobileMenu","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","toggle","bodyScrollLock","body","matchMedia","e","matches","enableBodyScroll","$f3b06000f9b46fbb$var$categoryBtn","$1f0dc3b9307be026$var$inputSearch","headers","then","resp","cat","arrayOfCategories","arr","results","display_name","insertAdjacentHTML","selectBtn","i1","$457cad0f7cadee7f$var$fetchMostPopularNews","newsCards","map","news","photoUrl","media","url","title","abstract","published_date","section","id","isFavorite","substring","join","getLocation","preventDefault","query","elements","search","value","trim","replaceChildren","pageNumber1","$457cad0f7cadee7f$var$articleSearch","dir","docs","headline","_id","section_name","pub_date","web_url","reset"],"version":3,"file":"favorite.164d3077.js.map"}