{"mappings":"AAAA,MAGMA,EAAWC,SAASC,cAAc,UAWpB,WAClB,GAAiC,IAA7BF,EAASG,SAASC,OAAc,CAClCC,QAAQC,IAAI,SACZ,MAAMC,EACJ,6FACFP,EAASQ,UAAYD,C,CAEvBF,QAAQC,IAAI,Y,CAfdG,GAmBA,WAGqC,MAA7BC,EAAOC,OAAOD,KAAKE,cAGnBC,EAAiB,GAGc,IAAhC,MAAMC,KAAOJ,EAAM,CAGtB,GADe,wBACDK,KAAKD,GAAM,CAEuB,MAAxCE,EAAWC,KAAKC,MAAMN,aAAaO,QAAQL,IAEZD,EAAtBC,GAAOE,C,EAKc,IAApCT,EAAS,GACb,IAAK,MAAMa,KAAOT,OAAOD,KAAKG,GAAiB,CAEvBN,GAAZ,yFAEkBa,sGAMP,IAAhB,MAAMC,KAAWR,EAAeO,GAEDb,GAAvB,OAAOc,EAAQC,aAE5Bf,GAAU,O,CAI8BP,EAAjCQ,UAAYD,C,CAzDvBgB","sources":["src/js/read-markup.js"],"sourcesContent":["const API_KEY = 'u59IF6VhLyuj5qt5wMVcLGGSUKapZTsn';\nconst URL_SEARCH = 'https://api.nytimes.com/svc/search/v2/articlesearch.json';\n\nconst readList = document.querySelector('.read');\n\n\nisReadEmpty();\n// getReadKeys();\ntestMarkup2();\n// testMarkupWithFilter();\n// createReadPage();\n\n\n// Для порожньої сторінки\nfunction isReadEmpty() {\n  if (readList.children.length === 0) {\n    console.log('empty');\n    const markup =\n      '<li class=\"read-item-empty\"><h2>Nothing read yet</h2><div class=\"read-empty\"></div></li > ';\n    readList.innerHTML = markup;\n  }\n  console.log('Not empty');\n}\n\n\nfunction testMarkup2() {\n\n  // отримуємо всі ключі з локального сховища\n  const keys = Object.keys(localStorage);\n\n  // створюємо об'єкт для зберігання списку статей за датами\n  const articlesByDate = {};\n\n  // перебираємо всі ключі з локального сховища\n  for (const key of keys) {\n    // перевіряємо, чи є ключ датою у форматі 02/03/2023\n    const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n    if (dateRegex.test(key)) {\n      // якщо ключ є датою, отримуємо список статей для цієї дати\n      const articles = JSON.parse(localStorage.getItem(key));\n      // додаємо цей список статей до списку за датою\n      articlesByDate[key] = articles;\n    }\n  }\n\n  // створюємо HTML-розмітку для списку статей за датами\n  let markup = '';\n  for (const key of Object.keys(articlesByDate)) {\n    // додаємо заголовок з датою\n    markup += `<li class=\"read-item\">\n      <div class=\"read-title\">\n        <h2 class=\"read-date\">${key}</h2>\n        <div class=\"read-arrow\"></div>\n      </div>\n      <ul class=\"read-gallery\">\n    `;\n    // створюємо список статей\n    for (const article of articlesByDate[key]) {\n      // додаємо елемент списку з назвою статті\n       markup += `<li>${article.title}</li>`;\n    }\n    markup += '</ul>';\n  }\n\n  // вставляємо HTML-розмітку у елемент з ідентифікатором 'articles'\n  readList.innerHTML = markup;\n}\n\n\n\n\n\nfunction testMarkup() {\n  // Отримуємо всі ключі з localStorage\n  const keys = Object.keys(localStorage);\n\n  // Фільтруємо ключі за заданим форматом дати\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const filteredKeys = keys.filter(key => dateRegex.test(key));\n\n  // Створюємо розмітку для кожного ключа та його значення\n  const markup = filteredKeys\n    .map(key => {\n      const articles = JSON.parse(localStorage.getItem(key));\n      console.log(articles);\n\n      const paragraphs = articles.map(item => `<p>${item}</p>`).join('');\n      return `<h2>${key}</h2>${paragraphs}`;\n    })\n    .join('');\n\n  // Додаємо розмітку в тег body\n  readList.innerHTML = markup;\n}\n\n// Формуємо сторінку\nasync function createReadPage() {\n  let markupList = '';\n  let markup = '';\n  let markupAll = '';\n  readList.innerHTML = '';\n  for (let i = 0; i < localStorage.length; i += 1) {\n    let storageKey = localStorage.key(i);\n    const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n    if (dateRegex.test(storageKey)) {\n      // малюємо першу розмітку\n      \n      markupList = markupList + createReadList(storageKey);\n      console.log(storageKey);\n      // const value = localStorage.getItem(storageKey)\n      // console.log(value);\n\n      const values = JSON.parse(localStorage.getItem(storageKey));\n      console.log(values);\n      // for (let i = 0; i < values.length; i += 1) {\n      //   let query = values[i];\n      //   console.log(query);\n      //   const data = await getReadNews(query);\n      //   const news = data.response.docs;\n      //   // console.log(news);\n      //   markup = markup + createReadNews(news[0]);\n        \n      // }\n      markupAll = markupList + markup\n      // const readItem = document.querySelector('.read');\n      // readItem.insertAdjacentHTML('beforeend', markup);\n    }\n    \n  } readList.insertAdjacentHTML('beforeend', markupAll);\n}\n// Формуємо галерею\nfunction createReadList(storageKey) {\n  // const dateTitle = storageKey;\n  return `\n  <li class=\"read-item\">\n      <div class=\"read-title\">\n        <h2 class=\"read-date\">${storageKey}</h2>\n        <div class=\"read-arrow\"></div>\n      </div>\n      <ul class=\"read-gallery\">\n      </ul>\n  </li>\n        `;\n}\n\n// Формуємо картку новини\nfunction createReadNews(news) {\n  const title = news.headline.main;\n  const isFavorite = true;\n\n  const photoUrl =\n    news.multimedia !== 0\n      ? `https://static01.nyt.com/${news.multimedia[0].url}`\n      : 'https://via.placeholder.com/400';\n\n  const { _id, section_name, abstract, pub_date, web_url } = news;\n\n  return `\n         <li>\n          <div class=\"news-card\">\n            <img src=\"${photoUrl}\" alt=\"заглушка\" />\n            <div class=\"news-card__info\">\n              <div class=\"news-card__category\">${section_name}</div>\n              <button class=\"news-card__favorite-btn ${\n                isFavorite ? 'active_btn' : ''\n              }\" data-news-id=\"${_id}\">\n                ${isFavorite ? 'Remove from Favorite' : 'Add to Favorite'}\n              </button>\n              <h2 class=\"news-card__title\">${title}</h2>\n              <p class=\"news-card__description\">${\n                abstract.length > 100\n                  ? abstract.substring(0, 100) + '...'\n                  : abstract\n              }</p>\n              <div class=\"news-card__date-div\">\n              <div class=\"news-card__date\">${new Date(\n                pub_date\n              ).toLocaleDateString()}</div>\n              <a class=\"news-card__read-more\" href=\"${web_url}\" target=\"_blank\">Read more</a>\n              </div>\n            </div>\n          </div>\n         </div>\n      </div>\n    </li>\n         `;\n}\n\n// Відправляємо запит\n\nasync function getReadNews(query) {\n  try {\n    return await fetch(\n      `${URL_SEARCH}?fq=_id:(\"${query}\")&api-key=${API_KEY}`\n    ).then(resp => resp.json());\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Перевірка наявності в локал сторідж ключів потрібного формата\n// const keys = Object.keys(localStorage);\n\n// keys.filter(key => /^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(key)).forEach(key => {\n//   const value = localStorage.getItem(key);\n//   console.log(`Значення для ключа ${key}: ${value}`);\n// });\n\n// function getReadKeys() {\n//   const keys = Object.keys(localStorage);\n//   keys.filter(key => /^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(key)).forEach(key => {\n//   const value = localStorage.getItem(key);\n//   console.log(`Значення для ключа ${key}: ${value}`);\n// });\n// };\n\n// ===============================================\n// function testMarcup() {\n// // Отримуємо всі ключі з localStorage\n// const keys = Object.keys(localStorage);\n\n// // Фільтруємо ключі за заданим форматом дати\n// const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n// const filteredKeys = keys.filter(key => dateRegex.test(key));\n\n// // Створюємо розмітку для кожного ключа та його значення\n// const markup = filteredKeys.map(key => {\n//   const value = JSON.parse(localStorage.getItem(key));\n//   const paragraphs = value.map(item => `<p>${item}</p>`).join('');\n//   return `<h2>${key}</h2>${paragraphs}`;\n// }).join('');\n\n// // Додаємо розмітку в тег body\n// readList.innerHTML = markup;\n// };\n\n// =========================З перевіркою на унікальність=========\nfunction testMarkupWithFilter() {\n  // Отримуємо всі ключі з localStorage\n  const keys = Object.keys(localStorage);\n\n  // Фільтруємо ключі за заданим форматом дати\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const filteredKeys = keys.filter(key => dateRegex.test(key));\n\n  // Об'єднуємо значення з однаковими датами, зберігаючи тільки унікальні значення\n  const data = {};\n  filteredKeys.forEach(key => {\n    const value = JSON.parse(localStorage.getItem(key));\n    value.forEach(item => {\n      if (data[item]) {\n        const existingDate = Object.keys(data[item])[0];\n        const currentDate = key;\n        if (new Date(currentDate) > new Date(existingDate)) {\n          data[item] = { [currentDate]: true };\n        }\n      } else {\n        data[item] = { [key]: true };\n      }\n    });\n  });\n\n  // Створюємо розмітку для кожного ключа та його значення\n  const markup = Object.keys(data)\n    .map(item => {\n      const dates = Object.keys(data[item]);\n      const paragraphs = `<p>${item}</p>`.repeat(dates.length);\n      return `<h2>${dates[0]}</h2>${paragraphs}`;\n    })\n    .join('');\n\n  // Додаємо розмітку в тег body\n  readList.innerHTML = markup;\n}\n// ==================================================\n\nfunction testMarkupWithEnotherFilter() {\n  // Отримуємо всі ключі з localStorage\n  const keys = Object.keys(localStorage);\n\n  // Фільтруємо ключі за заданим форматом дати\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const filteredKeys = keys.filter(key => dateRegex.test(key));\n\n  // Створюємо об'єкт, де ключами є унікальні значення з localStorage, а значеннями є масиви ключів, які містять ці значення\n  const uniqueValues = {};\n  filteredKeys.forEach(key => {\n    const value = JSON.parse(localStorage.getItem(key));\n    value.forEach(item => {\n      if (!uniqueValues[item]) {\n        uniqueValues[item] = [];\n      }\n      uniqueValues[item].push(key);\n    });\n  });\n\n  // Створюємо розмітку для кожного ключа та його значення\n  const markup = filteredKeys\n    .map(key => {\n      const value = JSON.parse(localStorage.getItem(key));\n      const paragraphs = value\n        .filter(item => uniqueValues[item].indexOf(key) === 0) // Фільтруємо унікальні значення для кожного ключа\n        .map(item => `<p>${item}</p>`)\n        .join('');\n      return `<h2>${key}</h2>${paragraphs}`;\n    })\n    .join('');\n\n  // Додаємо розмітку в тег body\n  readList.innerHTML = markup;\n}\n"],"names":["$a6108ac09bc68599$var$readList","document","querySelector","children","length","console","log","markup","innerHTML","$a6108ac09bc68599$var$isReadEmpty","keys","Object","localStorage","articlesByDate","key","test","articles","JSON","parse","getItem","key1","article","title","$a6108ac09bc68599$var$testMarkup2"],"version":3,"file":"read.9668d881.js.map"}